
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { api, type RouterOutputs } from "grindylocks/utils/api";
import { SignInButton, SignOutButton, useUser } from "@clerk/clerk-react";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { useState } from "react";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  const [value, setValue] = useState("")

  const ctx = api.useContext()
  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setValue("")
      ctx.posts.getAll.invalidate()
    }
  })

  if (!user) {
    return null;
  }

  return (
    <div className="gap3 flex w-full">
      <Image
        width={16}
        height={16}
        className="flex h-16 w-16  rounded-full"
        src={user.profileImageUrl}
        alt=""
      />
      <input
        placeholder="Type some emojis"
        className="grow bg-transparent outline-none "
        value={value}
        onChange={(e) => setValue(e.target.value)}
        disabled={isPosting}

      />
      <button type="submit" onClick={() => mutate({ content: value })}>Submit</button>
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, user } = props;
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={user.profilePicture}
        width={32}
        height={32}
        alt="the user's avatar"
        className="flex h-16 w-16  rounded-full"
      />
      <div className="flex flex-col">
        <div className="flex text-slate-300">
          <span>{`@${user.username}`}</span> â€¢
          <span>{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data } = api.posts.getAll.useQuery();

  // if (!data) {
  //   return <div>Loading...</div>;
  // }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-full h-screen justify-center">
        <div className="w-full border-x border-slate-400  md:max-w-2xl">
          <div className="p4 flex justify-center border-b border-slate-400">
            {!user.isSignedIn ? (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            ) : (
              <div className="flex justify-center">
                <SignOutButton />
              </div>
            )}
          </div>
          {!!user.isSignedIn && <CreatePostWizard />}
          <div className="flex flex-col">
            {data?.map((post) => (
              <PostView {...post} key={post.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
