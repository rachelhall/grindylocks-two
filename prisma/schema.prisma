datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

model Post {
    id         String    @id @default(cuid())
    createdAt  DateTime  @default(now())
    content    String    @db.VarChar(255)
    filePath   String?
    park       Park      @relation(fields: [parkId], references: [id])
    userId     String
    account    Account?  @relation(fields: [accountId], references: [id])
    parkId     String
    accountId  String?
    Business   Business? @relation(fields: [businessId], references: [id])
    businessId String?

    @@index([userId])
    @@index([parkId])
    @@index([accountId])
    @@index([businessId])
}

enum Category {
    STREET
    VERT
    TRANSITION
    PUMP_TRACK
    SKATER_CROSS
}

enum Surface {
    CONCRETE
    SKATE_LITE
    DIY
}

enum Wheel {
    QUADS
    BLADES
    SKATEBOARD
}

model Business {
    id             String    @id @default(cuid())
    name           String
    team_riders    Account[]
    accountId      String?
    profilePicture String?
    description    String?
    address_number String?
    hours          String?
    street         String?
    street_suffix  String?
    unit_number    String?
    post_code      String?
    city           String?
    region         String?
    region_code    String?
    country        String?
    lat            String?
    lng            String?
    posts          Post[]

    @@index([accountId])
}

model Account {
    id             String     @id @default(cuid())
    userId         String     @unique
    email          String
    username       String?    @unique
    first_name     String?
    last_name      String?
    bio            String?
    pronouns       String?
    local          Park?      @relation(fields: [parkId], references: [id])
    city           String?
    region         String?
    region_code    String?
    sponsors       Business[]
    wheels         Wheel?
    friends        Account[]  @relation("friends")
    friendsOf      Account[]  @relation("friends")
    parkId         String?
    tricks         Trick[]
    profilePicture String?
    posts          Post[]

    @@index([parkId])
}

model ParkPrimaryMedia {
    id     String  @id @default(cuid())
    url    String
    Park   Park?   @relation(fields: [parkId], references: [id])
    parkId String?

    @@index([parkId])
}

model Trick {
    id          String  @id @default(cuid())
    name        String
    description String?

    Account   Account? @relation(fields: [accountId], references: [id])
    accountId String?

    @@index([accountId])
}

model Park {
    id             String             @id @default(cuid())
    name           String
    description    String
    address_number String
    street         String
    post_code      String
    city           String
    region         String
    region_code    String
    country        String
    lat            String
    lng            String
    surface        Surface?
    elements       Element[]
    posts          Post[]
    media          ParkPrimaryMedia[]
    Account        Account[]
}

model Element {
    id       String   @id @default(cuid())
    name     String
    category Category
    Park     Park?    @relation(fields: [parkId], references: [id])
    parkId   String?

    @@index([parkId])
}

model Profile {
    id String @id @default(cuid())
}
